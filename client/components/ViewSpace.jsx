import React from 'react'
import { getRoundDataApi } from '../apis/apis'
import { connect } from 'react-redux'

class ViewSpace extends React.Component {

    componentDidMount() {

        const findPlayerToSendTo = () => {
            let positionNumber = this.props.playerPosition + (this.props.currentRound - 1)
            if (positionNumber >= this.props.playerIdList.length) {
                return this.props.playerIdList[positionNumber - (this.props.playerIdList.length)]
            } else {
                return this.props.playerIdList[positionNumber]
            }
        }
        getRoundDataApi(findPlayerToSendTo(), this.props.currentRound - 1, this.props.gameId)
            .then(res => {
                let drawing = res["round" + (this.props.currentRound-1) ].replace("\\", "")

                console.log("without replace: ", res)
                // console.log("with replace: ", res.round2.replace("\\", ""))
                // console.log("they're Equal ", res.round2 == res[0].round2.replace("\\", ""))

                Konva.Node.create(drawing, `viewingSpace${this.props.currentRound}`)
                return 
            })


        // console.log("outside ", json)

        var width = 300;
        var height = 400;


        // var example = '{"attrs":{"width":300,"height":400},"className":"Stage","children":[{"attrs":{},"className":"Layer","children":[{"attrs":{"stroke":"#000000","strokeWidth":5,"points":[79.8888931274414,270.9444580078125,84.33333587646484,253.16668701171875,88.77778625488281,239.27780151367188,96.55555725097656,219.27780151367188,100.4444580078125,211.50003051757812,106,204.83334350585938,109.88890075683594,198.16668701171875,113.22222900390625,193.16668701171875,117.11111450195312,187.61111450195312,118.77778625488281,182.61111450195312,121,178.16668701171875,123.77778625488281,174.27780151367188,125.4444580078125,171.5,128.7777862548828,165.9444580078125,131.00001525878906,163.16668701171875,135.4444580078125,157.61111450195312,140.4444580078125,149.83334350585938,144.88890075683594,144.27780151367188,149.33334350585938,138.72222900390625,151.55555725097656,137.05557250976562,153.7777862548828,134.83334350585938,154.33334350585938,134.27780151367188,155.4444580078125,133.72222900390625,155.4444580078125,133.16668701171875,156.00001525878906,132.61111450195312,156.55555725097656,132.61111450195312,157.11111450195312,132.61111450195312,157.6666717529297,132.61111450195312,158.22222900390625,133.16668701171875,158.7777862548828,133.72222900390625,159.33334350585938,134.27780151367188,160.4444580078125,135.388916015625,161.00001525878906,137.05557250976562,162.6666717529297,140.388916015625,164.88890075683594,144.27780151367188,167.6666717529297,148.16668701171875,171.00001525878906,153.72222900390625,175.4444580078125,159.27780151367188,182.6666717529297,169.27780151367188,189.88890075683594,180.9444580078125,196.55557250976562,194.27780151367188,201.55557250976562,204.27780151367188,205.4444580078125,215.388916015625,209.88890075683594,229.27780151367188,212.6666717529297,238.72222900390625,214.88890075683594,246.50003051757812,216.55557250976562,251.50003051757812,217.1111297607422,255.388916015625,217.6666717529297,258.16668701171875,218.7777862548828,260.9444580078125,219.33334350585938,263.72222900390625,219.88890075683594,265.388916015625,220.4444580078125,268.16668701171875,221.00001525878906,270.388916015625,221.55557250976562,272.0555725097656,221.55557250976562,274.2778015136719,222.66668701171875,275.9444580078125,223.22222900390625,278.16668701171875,223.77780151367188,279.8333435058594,224.33334350585938,282.0555725097656,224.33334350585938,283.72222900390625,224.33334350585938,284.2778015136719,224.33334350585938,284.8333435058594,224.33334350585938,285.9444580078125,224.33334350585938,286.5000305175781,224.33334350585938,287.0555725097656,224.33334350585938,287.61114501953125,224.33334350585938,288.16668701171875,224.33334350585938,288.72222900390625,224.33334350585938,289.2778015136719,223.77780151367188,289.8333435058594,223.22222900390625,289.8333435058594,222.66668701171875,289.8333435058594,222.11111450195312,289.8333435058594,221.55557250976562,289.8333435058594,221.00001525878906,289.8333435058594,220.4444580078125,289.8333435058594,219.88890075683594,289.8333435058594,219.33334350585938,289.8333435058594,218.7777862548828,289.8333435058594,218.7777862548828,289.2778015136719]},"className":"Line"}]}]}'








    }
    render() {
        return (
            <>
                <div className=" Writing-box">
                    <div id="container">
                        <div id={`viewingSpace${this.props.currentRound}`} className="container center"></div>
                    </div>
                </div>
            </>
        )
    }
}


const mapStateToProps = (state) => {
    return {
        players: state.players,
        playerId: state.playerId,
        gameId: state.game,
        roundNumber: state.currentRound,
        currentRound: state.currentRound,
        playerIdList: state.playerIdList
    }
}

export default connect(mapStateToProps)(ViewSpace)